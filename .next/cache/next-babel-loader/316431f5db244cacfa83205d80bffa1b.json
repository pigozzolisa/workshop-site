{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lisapigozzo/Documents/GitHub/workshop-site1/src/pages/mapContainer.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport { Component } from 'react';\nexport var MapContainer = /*#__PURE__*/function (_Component) {\n  _inherits(MapContainer, _Component);\n\n  var _super = _createSuper(MapContainer);\n\n  function MapContainer() {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMarkerClick\", function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMapClicked\", function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Map, {\n        google: this.props.google,\n        onClick: this.onMapClicked,\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          onClick: this.onMarkerClick,\n          name: 'Current location'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoWindow, {\n          marker: this.state.activeMarker,\n          visible: this.state.showingInfoWindow,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: this.state.selectedPlace.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\n;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyB_dgZnBaGT1Cc5n_tmpKVoO_MMGmv1TrA'\n})(MapContainer);","map":{"version":3,"sources":["/Users/lisapigozzo/Documents/GitHub/workshop-site1/src/pages/mapContainer.tsx"],"names":["Map","Marker","InfoWindow","GoogleApiWrapper","Component","MapContainer","showingInfoWindow","activeMarker","selectedPlace","props","marker","e","setState","state","google","onMapClicked","onMarkerClick","name","apiKey"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,EAAkCC,gBAAlC,QAA0D,mBAA1D;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACY;AACNC,MAAAA,iBAAiB,EAAE,KADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,aAAa,EAAE;AAHT,KADZ;;AAAA,oEAOoB,UAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB;AAAA,aACd,MAAKC,QAAL,CAAc;AACZJ,QAAAA,aAAa,EAAEC,KADH;AAEZF,QAAAA,YAAY,EAAEG,MAFF;AAGZJ,QAAAA,iBAAiB,EAAE;AAHP,OAAd,CADc;AAAA,KAPpB;;AAAA,mEAcmB,UAACG,KAAD,EAAW;AACxB,UAAI,MAAKI,KAAL,CAAWP,iBAAf,EAAkC;AAChC,cAAKM,QAAL,CAAc;AACZN,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KArBL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAuBa;AACP,0BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWK,MAAxB;AACI,QAAA,OAAO,EAAE,KAAKC,YADlB;AAAA,gCAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKC,aAAtB;AACQ,UAAA,IAAI,EAAE;AADd;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,UAAD;AACE,UAAA,MAAM,EAAE,KAAKH,KAAL,CAAWN,YADrB;AAEE,UAAA,OAAO,EAAE,KAAKM,KAAL,CAAWP,iBAFtB;AAAA,iCAGI;AAAA,mCACE;AAAA,wBAAK,KAAKO,KAAL,CAAWL,aAAX,CAAyBS;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;AAvCL;;AAAA;AAAA,EAAkCb,SAAlC;AAwCG;AAED,eAAeD,gBAAgB,CAAC;AAC9Be,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZb,YAFY,CAAf","sourcesContent":["import { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport { Component } from 'react';\n\nexport class MapContainer extends Component {\n    state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    };\n  \n    onMarkerClick = (props, marker, e) =>\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n  \n    onMapClicked = (props) => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        })\n      }\n    };\n  \n    render() {\n      return (\n        <Map google={this.props.google}\n            onClick={this.onMapClicked}>\n          <Marker onClick={this.onMarkerClick}\n                  name={'Current location'} />\n  \n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n              <div>\n                <h1>{this.state.selectedPlace.name}</h1>\n              </div>\n          </InfoWindow>\n        </Map>\n      )\n    }\n  };\n  \n  export default GoogleApiWrapper({\n    apiKey: 'AIzaSyB_dgZnBaGT1Cc5n_tmpKVoO_MMGmv1TrA'\n  })(MapContainer);"]},"metadata":{},"sourceType":"module"}